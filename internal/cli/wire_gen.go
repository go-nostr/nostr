// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-nostr/nostr"
	"github.com/go-nostr/nostr/internal/command"
)

// Injectors from wire.go:

func buildAuthCommand() *command.AuthCommand {
	authCommand := command.NewAuthCommand()
	return authCommand
}

func buildCountCommand() *command.CountCommand {
	countCommand := command.NewCountCommand()
	return countCommand
}

func buildCloseCommand() *command.CloseCommand {
	closeCommand := command.NewCloseCommand()
	return closeCommand
}

func buildEventCommand() *command.EventCommand {
	client := buildClient()
	eventCommand := command.NewEventCommand(client)
	return eventCommand
}

func buildNoticeCommand() *command.NoticeCommand {
	noticeCommand := command.NewNoticeCommand()
	return noticeCommand
}

func buildOkCommand() *command.OkCommand {
	okCommand := command.NewOkCommand()
	return okCommand
}

func buildRequestCommand() *command.RequestCommand {
	client := buildClient()
	requestCommand := command.NewRequestCommand(client)
	return requestCommand
}

// wire.go:

func buildClient() *nostr.Client {
	return nostr.NewClient(nil)
}
